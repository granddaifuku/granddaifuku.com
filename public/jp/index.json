[{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://granddaifuku.com/jp/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://granddaifuku.com/jp/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":["Rust"],"contents":"この記事は Rust Advent Calendar 2021 カレンダー 3 の 20 日目の記事です。\nはじめに Rust の lettre クレートでさくらのメールボックスを用いて独自ドメインでのメールを送信する際の記録です。\n前提としては、\n  xdomain にて独自ドメインを取得済み\n  Netlify DNS にネームサーバを設定してる\n「独自ドメインのメールアドレスでメールの送信がしたいが、ネームサーバは変更したくない」といった状態です。\n  lettre Rust のメーラライブラリで、\n  SMTP(Simple Mail Transfer Protocol)を用いてセキュアなメールの送信ができる\n  ファイルの送信\n  非同期サポート\n  ユニコードサポート\nなどなど欲しい機能が一通り揃っています。\n  さくらのメールボックス かの有名なさくらインターネットさんが用意されているプランの一つで、\n  独自ドメインのメールが使える\n  月額 87円（安すぎでは？）\nと私は主に月額にひかれて使い始めました。\n  やりたいこと さくらのメールボックスの登録、独自ドメインの追加、メールアドレスの作成は済んでいるものとします。\nRust 内から lettre を使って独自ドメインからメールを送信しましょう。\nまず、公式のサンプルを見てみます。\nuse lettre::transport::smtp::authentication::Credentials; use lettre::{Message, SmtpTransport, Transport}; let email = Message::builder() .from(\u0026#34;NoBody \u0026lt;nobody@domain.tld\u0026gt;\u0026#34;.parse().unwrap()) .reply_to(\u0026#34;Yuin \u0026lt;yuin@domain.tld\u0026gt;\u0026#34;.parse().unwrap()) .to(\u0026#34;Hei \u0026lt;hei@domain.tld\u0026gt;\u0026#34;.parse().unwrap()) .subject(\u0026#34;Happy new year\u0026#34;) .body(String::from(\u0026#34;Be happy!\u0026#34;)) .unwrap(); let creds = Credentials::new(\u0026#34;smtp_username\u0026#34;.to_string(), \u0026#34;smtp_password\u0026#34;.to_string()); // Open a remote connection to gmail let mailer = SmtpTransport::relay(\u0026#34;smtp.gmail.com\u0026#34;) .unwrap() .credentials(creds) .build(); // Send the email match mailer.send(\u0026amp;email) { Ok(_) =\u0026gt; println!(\u0026#34;Email sent successfully!\u0026#34;), Err(e) =\u0026gt; panic!(\u0026#34;Could not send email: {:?}\u0026#34;, e), ここで必要になるものが\nlet creds = Credentials::new(\u0026#34;smtp_username\u0026#34;.to_string(), \u0026#34;smtp_password\u0026#34;.to_string()); // Open a remote connection to gmail let mailer = SmtpTransport::relay(\u0026#34;smtp.gmail.com\u0026#34;) .unwrap() .credentials(creds) .build(); の部分です。\n初めに smtp_username, smtp_password にそれぞれ独自ドメインを使用したメールアドレス、そのメールアドレス作成時のパスワードを設定します。\nここでは、例としてメールアドレスが、 dummy@exmaple_domain.com でパスワードが、 dummy_password であるものとします。\n続いて、 mailer の接続情報ですが、ここに初期ドメインを設定します。アカウント情報から見れます。\n例として、 example.initial.domain.com としておきます。\ngit等を使用する際には、ドメイン情報やパスワード等を流出しないように気をつけてください。\nしたがって、ソースコードは次のようになります。\nlet creds = Credentials::new(\u0026#34;dummy@example_domain.com\u0026#34;.to_string(), \u0026#34;dummy_password\u0026#34;.to_string()); // Open a remote connection let mailer = SmtpTransport::relay(\u0026#34;example.initial.domain.com\u0026#34;) .unwrap() .credentials(creds) .build(); しかし、このままではさくらのメールボックスを使った送信はできません。\nさくらのメールボックスではメールの暗号化通信に STARTTLS を使用します。\nしたがって、mailer 部分を次のように改変します。\n// Open a remote connection using STARTTLS let mailer = SmtpTransport::starttls_relay(\u0026#34;exmaple.initial.domain.com\u0026#34;) .unwrap() .credentials(creds) .build(); これにより lettre を経由して独自ドメインからメールの送信ができるようになりました。\ngit等を使用する際には、ドメイン情報やパスワード等を流出しないように気をつけてください。\n参考リンク  lettre github みどりみちのブログ さくらのメールボックス さくらのレンタルサーバ（ドメインの設定） さくらのレンタルサーバ（メールアドレスの作成）  ","date":"December 18, 2021","hero":"/images/default-hero.jpg","permalink":"https://granddaifuku.com/jp/posts/development/rust-lettre-sakura-mailbox/","summary":"この記事は Rust Advent Calendar 2021 カレンダー 3 の 20 日目の記事です。\nはじめに Rust の lettre クレートでさくらのメールボックスを用いて独自ドメインでのメールを送信する際の記録です。\n前提としては、\n  xdomain にて独自ドメインを取得済み\n  Netlify DNS にネームサーバを設定してる\n「独自ドメインのメールアドレスでメールの送信がしたいが、ネームサーバは変更したくない」といった状態です。\n  lettre Rust のメーラライブラリで、\n  SMTP(Simple Mail Transfer Protocol)を用いてセキュアなメールの送信ができる\n  ファイルの送信\n  非同期サポート\n  ユニコードサポート\nなどなど欲しい機能が一通り揃っています。\n  さくらのメールボックス かの有名なさくらインターネットさんが用意されているプランの一つで、\n  独自ドメインのメールが使える\n  月額 87円（安すぎでは？）\nと私は主に月額にひかれて使い始めました。\n  やりたいこと さくらのメールボックスの登録、独自ドメインの追加、メールアドレスの作成は済んでいるものとします。\nRust 内から lettre を使って独自ドメインからメールを送信しましょう。\nまず、公式のサンプルを見てみます。\nuse lettre::transport::smtp::authentication::Credentials; use lettre::{Message, SmtpTransport, Transport}; let email = Message::builder() .","tags":null,"title":"Rust(lettre)とさくらのメールボックスでメール送信"},{"categories":["Codeforces"],"contents":"問題概要  1 から \\(n\\) までの順列 \\(P\\) を考える \\(1 \\leq l \\leq r \\leq n\\) の \\(l, r\\), \\(1 \\leq s \\leq \\frac{n(n + 1)}{2}\\) の \\(s\\) が与えられる \\(P_{l} + P_{l + 1} + \u0026hellip; + P_{r} = s\\) となる 1 から \\(n\\) までの順列が存在するならばそれを出力、存在しないならば -1 を出力する  解説 1 から \\(n\\) までの順列の中で長さ \\(r - l + 1\\) で生成できる最小値、最大値を考える。\n以下、\\(k = r - l + 1\\) として扱う。\n最小値 初項 1、 項数 \\(m\\) 、公差 1 の等差数列としてみると、\n\\(min(m) = \\frac{m(m + 1)}{2}\\)\nが導かれる。\n最大値 初項 \\(x\\) 、項数 \\(m\\) 、公差 -1 の等差数列としてみると、\n\\(max(x, m) = \\frac{m * (2 * x + (m - 1) * -1)}{2}\\) \\(max(x, m) = \\frac{m(2x - m + 1)}{2}\\)\nが導かれる。\n\\(min(k) \\leq s \\leq max(n, k)\\) の間にある \\(s\\) は条件を満たすことがわかる。\n残るは実装のみで、\\(n\\) から大きい順に 指定の配列に入れるか入れないかを決めていけば良い。\n方針\n初めに答えを入れる用の配列 \\(res\\) を用意する。\n次に \\(n\\) から大きい順に考えていく。\n\\(n\\) からfor 文を回し、\n\\(max(i, k) - s \\geq 0\\) かつ \\(s - i \\geq min(k - 1)\\) を満たすならば\n配列 \\(res\\) の \\(l + k\\) に \\(i\\) を代入、\\(k = k - 1, s = s - i\\) で置き換える。\nこれを \\(k\\) が 0 になるまで繰り返し、最終的に \\(s = 0\\) が達成できれば OK である。\nあとは配列の空いている部分に使用していない文字を代入していけば良い。\n提出したソースコード\n","date":"May 7, 2021","hero":"/images/default-hero.jpg","permalink":"https://granddaifuku.com/jp/posts/competitive/cf-713-div3-e/","summary":"問題概要  1 から \\(n\\) までの順列 \\(P\\) を考える \\(1 \\leq l \\leq r \\leq n\\) の \\(l, r\\), \\(1 \\leq s \\leq \\frac{n(n + 1)}{2}\\) の \\(s\\) が与えられる \\(P_{l} + P_{l + 1} + \u0026hellip; + P_{r} = s\\) となる 1 から \\(n\\) までの順列が存在するならばそれを出力、存在しないならば -1 を出力する  解説 1 から \\(n\\) までの順列の中で長さ \\(r - l + 1\\) で生成できる最小値、最大値を考える。\n以下、\\(k = r - l + 1\\) として扱う。\n最小値 初項 1、 項数 \\(m\\) 、公差 1 の等差数列としてみると、","tags":null,"title":"Codeforces #713(Div.3) E: Permutation by Sum"}]