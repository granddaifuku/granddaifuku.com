<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yudai Fukushima&#39;s webpage</title>
    <link>https://granddaifuku.com/jp/</link>
    <description>Recent content on Yudai Fukushima&#39;s webpage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://granddaifuku.com/jp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Search Results</title>
      <link>https://granddaifuku.com/jp/search/</link>
      <pubDate>Tue, 08 Jun 2010 08:06:25 +0600</pubDate>
      
      <guid>https://granddaifuku.com/jp/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description>
    </item>
    
    <item>
      <title>Search Results</title>
      <link>https://granddaifuku.com/jp/search/</link>
      <pubDate>Tue, 08 Jun 2010 08:06:25 +0600</pubDate>
      
      <guid>https://granddaifuku.com/jp/search/</guid>
      <description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [&amp;ldquo;HTML&amp;rdquo;, &amp;ldquo;JSON&amp;rdquo;] ```</description>
    </item>
    
    <item>
      <title>Rust(lettre)とさくらのメールボックスでメール送信</title>
      <link>https://granddaifuku.com/jp/posts/development/rust-lettre-sakura-mailbox/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://granddaifuku.com/jp/posts/development/rust-lettre-sakura-mailbox/</guid>
      <description>この記事は Rust Advent Calendar 2021 カレンダー 3 の 20 日目の記事です。
はじめに Rust の lettre クレートでさくらのメールボックスを用いて独自ドメインでのメールを送信する際の記録です。
前提としては、
  xdomain にて独自ドメインを取得済み
  Netlify DNS にネームサーバを設定してる
「独自ドメインのメールアドレスでメールの送信がしたいが、ネームサーバは変更したくない」といった状態です。
  lettre Rust のメーラライブラリで、
  SMTP(Simple Mail Transfer Protocol)を用いてセキュアなメールの送信ができる
  ファイルの送信
  非同期サポート
  ユニコードサポート
などなど欲しい機能が一通り揃っています。
  さくらのメールボックス かの有名なさくらインターネットさんが用意されているプランの一つで、
  独自ドメインのメールが使える
  月額 87円（安すぎでは？）
と私は主に月額にひかれて使い始めました。
  やりたいこと さくらのメールボックスの登録、独自ドメインの追加、メールアドレスの作成は済んでいるものとします。
Rust 内から lettre を使って独自ドメインからメールを送信しましょう。
まず、公式のサンプルを見てみます。
use lettre::transport::smtp::authentication::Credentials; use lettre::{Message, SmtpTransport, Transport}; let email = Message::builder() .</description>
    </item>
    
    <item>
      <title>Codeforces #713(Div.3) E: Permutation by Sum</title>
      <link>https://granddaifuku.com/jp/posts/competitive/cf-713-div3-e/</link>
      <pubDate>Fri, 07 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://granddaifuku.com/jp/posts/competitive/cf-713-div3-e/</guid>
      <description>問題概要  1 から \(n\) までの順列 \(P\) を考える \(1 \leq l \leq r \leq n\) の \(l, r\), \(1 \leq s \leq \frac{n(n + 1)}{2}\) の \(s\) が与えられる \(P_{l} + P_{l + 1} + &amp;hellip; + P_{r} = s\) となる 1 から \(n\) までの順列が存在するならばそれを出力、存在しないならば -1 を出力する  解説 1 から \(n\) までの順列の中で長さ \(r - l + 1\) で生成できる最小値、最大値を考える。
以下、\(k = r - l + 1\) として扱う。
最小値 初項 1、 項数 \(m\) 、公差 1 の等差数列としてみると、</description>
    </item>
    
  </channel>
</rss>
